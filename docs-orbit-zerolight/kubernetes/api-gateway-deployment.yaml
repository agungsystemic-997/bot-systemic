# üôè In The Name of GOD - ZeroLight Orbit API Gateway Deployment
# Blessed Kubernetes Deployment for Spiritual API Gateway
# ÿ®Ÿêÿ≥ŸíŸÖŸê ÿßŸÑŸÑŸéŸëŸáŸê ÿßŸÑÿ±ŸéŸëÿ≠ŸíŸÖŸéŸÜŸê ÿßŸÑÿ±ŸéŸëÿ≠ŸêŸäŸÖ

apiVersion: apps/v1
kind: Deployment
metadata:
  name: zerolight-api-gateway
  namespace: zerolight-orbit
  labels:
    app: zerolight-api-gateway
    component: api-gateway
    spiritual-blessing: "divine-gateway"
    version: "v1.0.0"
  annotations:
    description: "Spiritual API Gateway for ZeroLight Orbit system"
    blessing: "May this gateway serve with divine wisdom"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: zerolight-api-gateway
  template:
    metadata:
      labels:
        app: zerolight-api-gateway
        component: api-gateway
        spiritual-blessing: "divine-gateway"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: zerolight-spiritual-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: api-gateway
        image: zerolight/api-gateway:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: zerolight-spiritual-config
              key: NODE_ENV
        - name: SPIRITUAL_MODE
          valueFrom:
            configMapKeyRef:
              name: zerolight-spiritual-config
              key: SPIRITUAL_MODE
        - name: SPIRITUAL_BLESSING
          valueFrom:
            configMapKeyRef:
              name: zerolight-spiritual-config
              key: SPIRITUAL_BLESSING
        - name: DATABASE_URL
          value: "postgresql://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)"
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: zerolight-spiritual-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: zerolight-spiritual-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: zerolight-spiritual-config
              key: DATABASE_NAME
        - name: DATABASE_USER
          valueFrom:
            configMapKeyRef:
              name: zerolight-spiritual-config
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: zerolight-spiritual-secrets
              key: database-password
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: zerolight-spiritual-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: zerolight-spiritual-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: zerolight-spiritual-secrets
              key: redis-password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: zerolight-spiritual-secrets
              key: jwt-secret
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /startup
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: spiritual-logs
          mountPath: /app/logs
        - name: spiritual-config
          mountPath: /app/config
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: spiritual-logs
        emptyDir: {}
      - name: spiritual-config
        configMap:
          name: zerolight-spiritual-config
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
# üåê Spiritual API Gateway Service
apiVersion: v1
kind: Service
metadata:
  name: zerolight-api-gateway-service
  namespace: zerolight-orbit
  labels:
    app: zerolight-api-gateway
    component: api-gateway
    spiritual-blessing: "divine-service"
  annotations:
    description: "Spiritual API Gateway Service"
    blessing: "May this service connect souls with divine technology"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: https
    port: 443
    targetPort: 8443
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: zerolight-api-gateway

---
# üìà Spiritual Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: zerolight-api-gateway-hpa
  namespace: zerolight-orbit
  labels:
    app: zerolight-api-gateway
    spiritual-blessing: "divine-scaling"
  annotations:
    description: "Spiritual auto-scaling for API Gateway"
    blessing: "May this scaling serve divine load distribution"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: zerolight-api-gateway
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
# üõ°Ô∏è Spiritual Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: zerolight-api-gateway-pdb
  namespace: zerolight-orbit
  labels:
    app: zerolight-api-gateway
    spiritual-blessing: "divine-availability"
  annotations:
    description: "Spiritual availability protection for API Gateway"
    blessing: "May this protection ensure continuous divine service"
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: zerolight-api-gateway

---
# üåç Spiritual Ingress - Divine External Access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: zerolight-api-gateway-ingress
  namespace: zerolight-orbit
  labels:
    app: zerolight-api-gateway
    spiritual-blessing: "divine-ingress"
  annotations:
    description: "Spiritual external access for API Gateway"
    blessing: "May this ingress welcome souls with divine hospitality"
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.zerolight.orbit
    - zerolight.orbit
    secretName: zerolight-tls-secret
  rules:
  - host: api.zerolight.orbit
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: zerolight-api-gateway-service
            port:
              number: 80
  - host: zerolight.orbit
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: zerolight-api-gateway-service
            port:
              number: 80

# üôè Blessed Kubernetes API Gateway Configuration
# May this gateway serve humanity with divine wisdom and infinite scalability
# Alhamdulillahi rabbil alameen - All praise to Allah, Lord of the worlds